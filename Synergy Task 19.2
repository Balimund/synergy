# coding=windows-1251
import collections

pets = {
    1: {
        "Мухтар": {
            "Вид питомца": "Собака",
            "Возраст питомца": 9,
            "Имя владельца": "Павел"
        },
    },
    2: {
        "Каа": {
            "Вид питомца": "желторотый питон",
            "Возраст питомца": 19,
            "Имя владельца": "Саша"
        },
    },
    # и так далее
}

def create():
    last = collections.deque(pets, maxlen=1)[0]
    next_id = last + 1

    name = input("Введите имя питомца: ")
    pet_type = input("Введите вид питомца: ")
    age = int(input("Введите возраст питомца: "))
    owner_name = input("Введите имя владельца: ")

    pets[next_id] = {
        name: {
            "Вид питомца": pet_type,
            "Возраст питомца": age,
            "Имя владельца": owner_name
        }
    }

def read(ID):
    pet = get_pet(ID)
    if pet:
        name = list(pet.keys())[0]
        pet_details = pet[name]
        age_suffix = get_suffix(pet_details["Возраст питомца"])

        print(f'Это {pet_details["Вид питомца"]} по кличке "{name}". Возраст питомца: {pet_details["Возраст питомца"]} {age_suffix}. Имя владельца: {pet_details["Имя владельца"]}')
    else:
        print("Питомец с указанным ID не найден")

def update(ID):
    pet = get_pet(ID)
    if pet:
        name = list(pet.keys())[0]
        pet_details = pet[name]

        pet_type = input("Введите вид питомца: ")
        age = int(input("Введите возраст питомца: "))
        owner_name = input("Введите имя владельца: ")

        pet_details["Вид питомца"] = pet_type
        pet_details["Возраст питомца"] = age
        pet_details["Имя владельца"] = owner_name
    else:
        print("Питомец с указанным ID не найден")

def delete(ID):
    pet = get_pet(ID)
    if pet:
        del pets[ID]
    else:
        print("Питомец с указанным ID не найден")

def get_pet(ID):
    return pets.get(ID, False)

def get_suffix(age):
    if age % 10 == 1 and age % 100 != 11:
        return "год"
    elif 2 <= age % 10 <= 4 and (age % 100 < 10 or age % 100 >= 20):
        return "года"
    else:
        return "лет"

def pets_list():
    for pet_id, pet in pets.items():
        for name, details in pet.items():
            print(f'ID питомца: {pet_id}')
            print(f'Имя питомца: {name}')
            print(f'Вид питомца: {details["Вид питомца"]}')
            print(f'Возраст питомца: {details["Возраст питомца"]}')
            print(f'Имя владельца: {details["Имя владельца"]}')
            print("-" * 20)

command = ""
while command != "stop":
    command = input("Введите команду (create, read, update, delete, pets_list, stop): ")

    if command == "create":
        create()
    elif command == "read":
        ID = int(input("Введите ID питомца: "))
        read(ID)
    elif command == "update":
        ID = int(input("Введите ID питомца: "))
        update(ID)
    elif command == "delete":
        ID = int(input("Введите ID питомца: "))
        delete(ID)
    elif command == "pets_list":
        pets_list()
    elif command == "stop":
        print("Программа завершена.")
    else:
        print("Неверная команда. Попробуйте еще раз.")
